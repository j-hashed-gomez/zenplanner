name: Deploy to Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      secrets: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/my-image:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create Docker secrets
        run: |
          echo "${{ secrets.DB_HOST }}" | docker secret create db_host -
          echo "${{ secrets.DB_PASSWORD }}" | docker secret create db_password -
          echo "${{ secrets.DB_PORT }}" | docker secret create db_port -
          echo "${{ secrets.DB_USER }}" | docker secret create db_user -
          echo "${{ secrets.DJANGO_SECRET_KEY }}" | docker secret create django_secret_key -
          echo "${{ secrets.GOOGLE_CLIENT_ID }}" | docker secret create google_client_id -
          echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | docker secret create google_client_secret -
          echo "${{ secrets.GOOGLE_REDIRECT_URI }}" | docker secret create google_redirect_uri -

      - name: Clean up Docker environment
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 'bash /root/limpia.sh'

      - name: Deploy new container
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            echo "Deploying new container..."
            docker service create \
              --name zenplanner \
              --secret db_host \
              --secret db_password \
              --secret db_port \
              --secret db_user \
              --secret django_secret_key \
              --secret google_client_id \
              --secret google_client_secret \
              --secret google_redirect_uri \
              -p 80:80 \
              ghcr.io/${{ github.repository }}/my-image:latest
          EOF

      - name: Verify new container is running
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            echo "Verifying new container is running..."
            docker service ls
          EOF
