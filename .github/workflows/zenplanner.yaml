name: Deploy to Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/my-image:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clean up Docker environment
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 'bash /root/limpia.sh'

      - name: Deploy new container
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            echo "Deploying new container..."
            docker run -d -p 80:80 --name zenplanner \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e DB_PORT="${{ secrets.DB_PORT }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DJANGO_SECRET_KEY="${{ secrets.DJANGO_SECRET_KEY }}" \
              -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              -e GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}" \
              ghcr.io/${{ github.repository }}/my-image:latest
          EOF

      - name: Verify new container is running
        run: |
          ssh -o StrictHostKeyChecking=no root@51.210.102.229 << 'EOF'
            echo "Verifying new container is running..."
            docker ps -a
          EOF
